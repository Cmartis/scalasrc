object MyModule {
  def abs(n: Int): Int = 
    if (n < 0) -n
    else n
  
    
  def factorial(n: Int): Int = {
      def go(n: Int, acc: Int) : Int = 
        if (n <= 0) acc
        else go(n-1, n*acc)
       
        go(n, 1)
    }
  
  def findFirst(ss: Array[String], key: String): Int = {
    def loop(n: Int): Int =
      if(n > ss.length) -1
      else if (ss(n) == key) n
      else loop(n + 1)
    
      loop(0)
  }
  
  def formatResult(name: String, n:Int, f: Int => Int) = {
    val msg = "The %s of %d is %d"
    msg.format(name, n, f(n))
  }
  
  private def formatAbs(x: Int) = {
      val msg = "The absolute value of %d is %d"
      msg.format(x, abs(x))
    }
  
  private def formatFactorial(x: Int) = {
      val msg = "The factorial value of %d is %d"
      msg.format(x, factorial(x))
    }
  
  private def formatFindFirst(ss: Array[String], key: String) = {
      val msg = "The string %s is at location %d"
      msg.format(key, findFirst(ss, key))
    }
    
  def main(args: Array[String]) : Unit = 
    //println(formatAbs(-42))
    //println(formatFactorial(7))
    
    ///println(formatResult("absolute value", -24, abs))
    //println(formatResult("factorial", 14, factorial))
  
  println(formatFindFirst(["this", "is", "a", "test"], "a"))
          
  
}